name: Backend CI

on:
  pull_request:
    branches: [ main ]

env:
  SERVICES: "account-service chatbot-service"

jobs:
  backend:
    name: Backend CI
    runs-on: ubuntu-latest
    
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('service/*/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python tooling
        run: |
          pip install --upgrade pip
          pip install black==23.12.1 isort==5.13.2 flake8==7.0.0 pytest==7.4.4

      - name: Process services
        run: |
          for service in $SERVICES; do
            echo "=== Checking service/$service ==="
            
            if [ -f "service/$service/requirements.txt" ]; then
              echo "Installing dependencies for $service"
              pip install -r "service/$service/requirements.txt"
            fi
            
            echo "Running linting checks for $service"
            if ! black --check "service/$service"; then
              echo "❌ Black check failed for $service"
              exit 1
            fi
            
            if ! isort --check-only "service/$service"; then
              echo "❌ isort check failed for $service"
              exit 1
            fi
            
            if ! flake8 "service/$service"; then
              echo "❌ flake8 check failed for $service"
              exit 1
            fi
            
            echo "✅ Linting passed for $service"
            
            # Run tests if tests directory or pytest.ini exists
            if [ -d "service/$service/tests" ] || [ -f "service/$service/pytest.ini" ]; then
              echo "Running tests for $service"
              if ! pytest -q "service/$service"; then
                echo "❌ Tests failed for $service"
                exit 1
              fi
              echo "✅ Tests passed for $service"
            else
              echo "No tests found for $service, skipping"
            fi
            
            echo "=== Completed $service ==="
            echo
          done
