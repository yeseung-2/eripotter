name: Backend CI

on:
  pull_request:
  push:
    branches: [main]

jobs:
  detect:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.f.outputs.backend }}
      gateway: ${{ steps.f.outputs.gateway }}
      account: ${{ steps.f.outputs.account }}
      chatbot: ${{ steps.f.outputs.chatbot }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: f
        with:
          filters: |
            backend:
              - 'gateway/**'
              - 'service/**'
            gateway:
              - 'gateway/**'
            account:
              - 'service/account-service/**'
            chatbot:
              - 'service/chatbot-service/**'

  backend-ci:
    name: Backend CI
    needs: detect
    if: needs.detect.outputs.backend == 'true'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install base tooling
        run: |
          python -m pip install --upgrade pip
          pip install ruff mypy pytest

      - name: Install per-service requirements (skip if missing)
        run: |
          set -e
          for d in gateway service/*-service; do
            if [ -f "$d/requirements.txt" ]; then
              echo "== Installing $d requirements =="
              pip install -r "$d/requirements.txt"
            else
              echo "== Skip (no requirements.txt) for $d =="
            fi
          done

      - name: Lint (ruff) — not strict at start
        run: |
          ruff check gateway service || true

      - name: Type check (mypy) — relaxed for imports
        run: |
          mypy --ignore-missing-imports --install-types --non-interactive gateway service || true

      - name: Run tests if present
        run: |
          found=0
          for d in gateway service/*-service; do
            if [ -d "$d/tests" ]; then
              echo "::group::pytest $d"
              found=1
              pytest -q "$d"
              echo "::endgroup::"
            fi
          done
          if [ $found -eq 0 ]; then
            echo "No tests found; skipping."
          fi